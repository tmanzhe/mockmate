model User {
  id        String    @id @default(uuid()) @map("_id") // Unique identifier for the user
  name      String    // User's name
  email     String    @unique // User's email
  password  String    // Encrypted password (if applicable)
  sessions  Session[] // Relation: One user can have many sessions
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Session {
  id           String     @id @default(uuid()) @map("_id") // Unique identifier for each session
  user         User       @relation(fields: [userId], references: [id])
  userId       String     // Foreign key for User
  topic        String     // Topic or focus area for the interview
  style        String?    // Style/layout of the interview (optional)
  questions    Question[] // Relation: One session has many questions
  responses    Response[] // Relation: One session has many responses
  feedbackLogs Feedback[] // Relation: One session has many feedback logs
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model Question {
  id          String    @id @default(uuid()) @map("_id") // Unique identifier for each question
  session     Session   @relation(fields: [sessionId], references: [id])
  sessionId   String    // Foreign key for Session
  text        String    // The question text generated by MockMate
  type        String    // Question type: "technical", "behavioral", "creative"
  createdAt   DateTime  @default(now())
}

model Response {
  id          String    @id @default(uuid()) @map("_id") // Unique identifier for each response
  session     Session   @relation(fields: [sessionId], references: [id])
  sessionId   String    // Foreign key for Session
  questionId  String    // Foreign key for Question (to link response to a question)
  userAnswer  String    // User's response to the question
  mockmateThoughts String? // MockMate's thoughts about the user's response (optional)
  audioUrl    String?   // Path to the user's audio response (e.g., stored in AWS S3)
  videoUrl    String?   // Path to the user's video response (e.g., stored in AWS S3)
  createdAt   DateTime  @default(now())
}

model Feedback {
  id          String    @id @default(uuid()) @map("_id") // Unique identifier for each feedback log
  session     Session   @relation(fields: [sessionId], references: [id])
  sessionId   String    // Foreign key for Session
  thoughts    String    // AI-generated feedback/thoughts (e.g., strengths and weaknesses)
  createdAt   DateTime  @default(now())
}
